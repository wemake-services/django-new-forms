[build-system]
requires = ["poetry-core>=2.0"]
build-backend = "poetry.core.masonry.api"


[project]
name = "django-new-forms"
description = "Django forms validation using additional backends"
repository = "https://github.com/wemake-services/django-new-forms"
version = "0.1.0"
requires-python = ">=3.10,<3.14"
readme = "README.md"
license = { text = "MIT" }
dynamic = ["dependencies", "classifiers"]

authors = [
  { name = "Nikita Sobolev", email = "mail@sobolevn.me" },
  { name = "Alexander Kondratev", email = "kondratev.av@inbox.ru"}
]
keywords = [
  "django",
  "forms",
  "pydantic",
  "msgspec",
]


[tool.poetry]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]

[project.optional-dependencies]
pydantic = [
    "pydantic>=2.11.9",
]
msgspec = [
    "msgspec>=0.19.0",
]

[tool.poetry.group.dev.dependencies]
django = ">=4.2,<6.0" # TODO: python and django versions

mypy = "^1.16"

wemake-python-styleguide = "^1.1"
ruff = "^0.11"

pytest = "^8.4"
pytest-cov = "^6.1"
pytest-randomly = "^3.16"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^8.1"
sphinx-autodoc-typehints = "^3.0"
tomli = "^2.2"
myst-parser = "^4.0"
furo = "^2024.8"


[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py310"
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "A005",   # allow to shadow stdlib and builtin module names
  "COM812", # trailing comma, conflicts with `ruff format`
  # Different doc rules that we don't really care about:
  "D100",
  "D104",
  "D106",
  "D203",
  "D212",
  "D401",
  "D404",
  "D405",
  "ISC001",  # implicit string concat conflicts with `ruff format`
  "ISC003",  # prefer explicit string concat over implicit concat
  "PLR09",   # we have our own complexity rules
  "PLR2004", # do not report magic numbers
  "PLR6301", # do not require classmethod / staticmethod when self not used
  "TRY003",  # long exception messages from `tryceratops`
]
external = [ "WPS" ]

# Plugin configs:
flake8-quotes.inline-quotes = "single"
mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]


[tool.pytest.ini_options]
# pytest config: http://doc.pytest.org/en/latest/customize.html

# Strict `@xfail` by default:
xfail_strict = true
# Fail on warnings:
filterwarnings = ["error"]

addopts = [
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
    # Output:
  "--tb=short",
  # Coverage:
  "--cov=django_new_forms",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-branch",
  "--cov-fail-under=100",
  # Ignores:
  "--ignore=docs",
]


[tool.mypy]
# The mypy configurations: http://bit.ly/2zEl9WI
ignore_missing_imports = true
strict = true
strict_bytes = true
local_partial_types = true
warn_unreachable = true

enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
  "explicit-override",
  "mutable-override",
  "unimported-reveal",
  "deprecated",
]
